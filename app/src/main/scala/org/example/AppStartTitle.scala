/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import scala.io.Source
import sys.process._
import java.io.File

object AppStartTitle {

  def main(args: Array[String]): Unit = {
    val inputFile = "/home/valle/Travail/Dev/java/decoupeur-audio/data/input.mp3"
    val timecodesFile = "starts-and-titles.txt"
    val outputDir = new File("output")
    outputDir.mkdirs()

    val entries = createEntries(timecodesFile);

    // Obtenir la dur√©e totale du fichier via ffprobe
    val durationSeconds = getMp3Duration(inputFile)
    val lastTime = durationSecondsToString(durationSeconds)

    // G√©n√©rer les d√©coupes
    for (i <- entries.indices) {
      val (start, title) = entries(i)
      val end = if (i < entries.length - 1) entries(i + 1)._1 else lastTime
      val safeTitle = title.replaceAll("[^a-zA-Z0-9_\\- ]", "").replaceAll(" +", "_")
      val outputFile = s"output/${"%02d".format(i + 1)}_$safeTitle.mp3"

      val command = Seq(
        "ffmpeg", "-y",
        "-i", inputFile,
        "-ss", start,
        "-to", end,
        "-c", "copy",
        outputFile
      )

      println(s"üéµ Extracting: $title ($start ‚Üí $end)")
      val exitCode = command.!
      if (exitCode == 0) println(s"‚úÖ $outputFile")
      else println(s"‚ùå Failed: $outputFile")
    }
  }

  def createEntries(timecodesFile: String): List[(String, String)] = {
    // Lire tous les timecodes et titres
    val lines = Source.fromFile(timecodesFile).getLines().toList
    lines.map { line =>
      val parts = line.split(" ", 2)
      val time = "00:" + parts(0).trim + ".000" // convertir "MM:SS" ‚Üí "00:MM:SS.000"
      val title = parts(1).trim
      (time, title)
    }
  }

  // Utilise ffprobe pour obtenir la dur√©e totale en secondes
  def getMp3Duration(file: String): Double = {
    val cmd = Seq("ffprobe", "-v", "error", "-show_entries", "format=duration", "-of",
      "default=noprint_wrappers=1:nokey=1", file)
    val output = cmd.!!.trim
    output.toDouble
  }

  // Convertit 32.5 ‚Üí "00:32:30.000"
  def durationSecondsToString(seconds: Double): String = {
    val totalSeconds = seconds.toInt
    val hours = totalSeconds / 3600
    val minutes = (totalSeconds % 3600) / 60
    val secs = totalSeconds % 60
    f"$hours%02d:$minutes%02d:$secs%02d.000"
  }

}
